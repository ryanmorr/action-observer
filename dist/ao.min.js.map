{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","ao.js","src/ao.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ao","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","onEvent","evt","el","find","target","nodeName","toLowerCase","type","key","getAttribute","has","listeners","triggered","fn","closest","docElement","hasAttribute","parentNode","observe","unobserve","wasTriggered","disable","removeEventListener","Object","defineProperty","value","document","documentElement","hasOwnProperty","addEventListener"],"mappings":";CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,GAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCEA,YCYA,SAAS0B,GAAQC,GACb,GAAMC,GAAKC,EAAKF,EAAIG,OACpB,IAAIF,EAAI,CAGJ,GAAkC,SAA9BA,EAAGG,SAASC,eAAyC,WAAbL,EAAIM,KAC5C,MAKJ,IAAMC,GAAMN,EAAGO,aAAa,UAEvBC,GAAIb,KAAKc,EAAWH,KACrBG,EAAUH,OAGdG,EAAUH,GAAKI,WAAY,CAI3B,IAAMC,GAAKF,EAAUH,GAAKK,EACtBA,IACAA,EAAGhB,KAAKK,EAAID,EAAKC,IAc7B,QAASC,GAAKD,GACV,GAAI,WAAaA,GACb,MAAOA,GAAGY,QAAQ,YAEtB,MAAOZ,GAAMA,IAAOa,GAAY,CAC5B,GAAIb,EAAGc,aAAa,WAChB,MAAOd,EAEXA,GAAKA,EAAGe,WAEZ,MAAO,MAYJ,QAASC,GAAQV,EAAKK,GACzBF,EAAUH,IAAQI,WAAW,EAAOC,GAAAA,GAUjC,QAASM,GAAUX,GAClBE,EAAIb,KAAKc,EAAWH,UACbG,GAAUH,GAYlB,QAASY,GAAaZ,GACzB,MAAOE,GAAIb,KAAKc,EAAWH,IAAQG,EAAUH,GAAKI,UAU/C,QAASS,KACZN,EAAWO,oBAAoB,QAAStB,GAAS,GACjDe,EAAWO,oBAAoB,SAAUtB,GAAS,GD3GtDuB,OAAOC,eAAelD,EAAS,cAC3BmD,OAAO,IAEXnD,ECkEgB4C,QAAAA,EDjEhB5C,EC4EgB6C,UAAAA,ED3EhB7C,ECyFgB8C,aAAAA,EDxFhB9C,ECmGgB+C,QAAAA,CA1GhB,IAAMN,GAAapC,OAAO+C,SAASC,gBAC7BjB,KAASkB,eACTjB,IAiHNI,GAAWc,iBAAiB,QAAS7B,GAAS,GAC9Ce,EAAWc,iBAAiB,SAAU7B,GAAS,EAK/C,IAAMjB,IAAMmC,QAAAA,EAASC,UAAAA,EAAWE,QAAAA,EAASD,aAAAA,EDYzC9C,GAAAA,WCXeS,YDaJ,IAAI","file":"ao.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*! action-observer v2.0.0 | https://github.com/ryanmorr/action-observer */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ao = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.observe = observe;\nexports.unobserve = unobserve;\nexports.wasTriggered = wasTriggered;\nexports.disable = disable;\n/**\r\n * Common variables\r\n */\nvar docElement = window.document.documentElement;\nvar has = {}.hasOwnProperty;\nvar listeners = {};\n\n/**\r\n * Handle action events (click, submit) on\r\n * the document\r\n *\r\n * @param {Event} evt\r\n * @api private\r\n */\nfunction onEvent(evt) {\n    var el = find(evt.target);\n    if (el) {\n        // If the element is a form and it is\n        // not a submit event, return\n        if (el.nodeName.toLowerCase() === 'form' && evt.type !== 'submit') {\n            return;\n        }\n        // Get the value of the `data-ao`\n        // attribute used to find the callback\n        // function\n        var key = el.getAttribute('data-ao');\n        // Create map if it doesn't exist\n        if (!has.call(listeners, key)) {\n            listeners[key] = {};\n        }\n        // Mark the element as triggered\n        listeners[key].triggered = true;\n        // If a callback exists, invoke the\n        // function passing the element and event\n        // object\n        var fn = listeners[key].fn;\n        if (fn) {\n            fn.call(el, evt, el);\n        }\n    }\n}\n\n/**\r\n * Climb up the DOM tree to find the element\r\n * containing the `data-ao` attribute\r\n * based on an event's target\r\n *\r\n * @param {Element} el\r\n * @return {Element|Null}\r\n * @api private\r\n */\nfunction find(el) {\n    if ('closest' in el) {\n        return el.closest('[data-ao]');\n    }\n    while (el && el !== docElement) {\n        if (el.hasAttribute('data-ao')) {\n            return el;\n        }\n        el = el.parentNode;\n    }\n    return null;\n}\n\n/**\r\n * Map a callback function to the element\r\n * in which you would like to observe action\r\n * events on\r\n *\r\n * @param {String} key\r\n * @param {Function} fn\r\n * @api public\r\n */\nfunction observe(key, fn) {\n    listeners[key] = { triggered: false, fn: fn };\n}\n\n/**\r\n * Remove a callback function bound to an\r\n * element being observed\r\n *\r\n * @param {String} key\r\n * @api public\r\n */\nfunction unobserve(key) {\n    if (has.call(listeners, key)) {\n        delete listeners[key];\n    }\n}\n\n/**\r\n * Was an action event triggered on the\r\n * element corresponding to the provided key\r\n *\r\n * @param {String} key\r\n * @return {Boolean}\r\n * @api public\r\n */\nfunction wasTriggered(key) {\n    return has.call(listeners, key) && listeners[key].triggered;\n}\n\n/**\r\n * Disable Action Observer functionality and\r\n * remove the event listeners from the\r\n * document element\r\n *\r\n * @api public\r\n */\nfunction disable() {\n    docElement.removeEventListener('click', onEvent, false);\n    docElement.removeEventListener('submit', onEvent, false);\n}\n\n/**\r\n * Listen for click and submit events on the\r\n * document when they bubble up\r\n */\ndocElement.addEventListener('click', onEvent, false);\ndocElement.addEventListener('submit', onEvent, false);\n\n/**\r\n * Declare and export `ao` namespace\r\n */\nvar ao = { observe: observe, unobserve: unobserve, disable: disable, wasTriggered: wasTriggered };\nexports.default = ao;\n\n},{}]},{},[1])(1)\n});\n\n","/**\r\n * Common variables\r\n */\r\nconst docElement = window.document.documentElement;\r\nconst has = {}.hasOwnProperty;\r\nconst listeners = {};\r\n\r\n/**\r\n * Handle action events (click, submit) on\r\n * the document\r\n *\r\n * @param {Event} evt\r\n * @api private\r\n */\r\nfunction onEvent(evt) {\r\n    const el = find(evt.target);\r\n    if (el) {\r\n        // If the element is a form and it is\r\n        // not a submit event, return\r\n        if (el.nodeName.toLowerCase() === 'form' && evt.type !== 'submit') {\r\n            return;\r\n        }\r\n        // Get the value of the `data-ao`\r\n        // attribute used to find the callback\r\n        // function\r\n        const key = el.getAttribute('data-ao');\r\n        // Create map if it doesn't exist\r\n        if (!has.call(listeners, key)) {\r\n            listeners[key] = {};\r\n        }\r\n        // Mark the element as triggered\r\n        listeners[key].triggered = true;\r\n        // If a callback exists, invoke the\r\n        // function passing the element and event\r\n        // object\r\n        const fn = listeners[key].fn;\r\n        if (fn) {\r\n            fn.call(el, evt, el);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Climb up the DOM tree to find the element\r\n * containing the `data-ao` attribute\r\n * based on an event's target\r\n *\r\n * @param {Element} el\r\n * @return {Element|Null}\r\n * @api private\r\n */\r\nfunction find(el) {\r\n    if ('closest' in el) {\r\n        return el.closest('[data-ao]');\r\n    }\r\n    while (el && el !== docElement) {\r\n        if (el.hasAttribute('data-ao')) {\r\n            return el;\r\n        }\r\n        el = el.parentNode;\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Map a callback function to the element\r\n * in which you would like to observe action\r\n * events on\r\n *\r\n * @param {String} key\r\n * @param {Function} fn\r\n * @api public\r\n */\r\nexport function observe(key, fn) {\r\n    listeners[key] = {triggered: false, fn};\r\n}\r\n\r\n/**\r\n * Remove a callback function bound to an\r\n * element being observed\r\n *\r\n * @param {String} key\r\n * @api public\r\n */\r\nexport function unobserve(key) {\r\n    if (has.call(listeners, key)) {\r\n        delete listeners[key];\r\n    }\r\n}\r\n\r\n/**\r\n * Was an action event triggered on the\r\n * element corresponding to the provided key\r\n *\r\n * @param {String} key\r\n * @return {Boolean}\r\n * @api public\r\n */\r\nexport function wasTriggered(key) {\r\n    return has.call(listeners, key) && listeners[key].triggered;\r\n}\r\n\r\n/**\r\n * Disable Action Observer functionality and\r\n * remove the event listeners from the\r\n * document element\r\n *\r\n * @api public\r\n */\r\nexport function disable() {\r\n    docElement.removeEventListener('click', onEvent, false);\r\n    docElement.removeEventListener('submit', onEvent, false);\r\n}\r\n\r\n/**\r\n * Listen for click and submit events on the\r\n * document when they bubble up\r\n */\r\ndocElement.addEventListener('click', onEvent, false);\r\ndocElement.addEventListener('submit', onEvent, false);\r\n\r\n/**\r\n * Declare and export `ao` namespace\r\n */\r\nconst ao = {observe, unobserve, disable, wasTriggered};\r\nexport default ao;\r\n"],"sourceRoot":"/source/"}