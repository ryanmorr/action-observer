/*! @ryanmorr/action-observer v4.0.1 | https://github.com/ryanmorr/action-observer */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).actionObserver={})}(this,(function(e){"use strict";const t=new Map,n=window.document.documentElement;function o(e){const n=e.target.closest("[action-observe]");if(n){if("form"===n.nodeName.toLowerCase()&&"submit"!==e.type)return;const o=n.getAttribute("action-observe");let s=t.get(o);s||(s={actions:[]},t.set(o,s)),s.actions.push({element:n,event:e});const i=s.callback;i&&i(e,n)}}n.addEventListener("click",o,!1),n.addEventListener("submit",o,!1),e.disable=function(){t.clear(),n.removeEventListener("click",o,!1),n.removeEventListener("submit",o,!1)},e.getActions=function(e){let n=t.get(e);return n||(n={actions:[]},t.set(e,n)),n.actions},e.observe=function(e,n){let o=t.get(e);o?o.callback=n:(o={callback:n,actions:[]},t.set(e,o));const s=o.actions;s.length>0&&s.forEach((e=>n(e.event,e.element)))},e.unobserve=function(e){t.has(e)&&t.delete(e)}}));
