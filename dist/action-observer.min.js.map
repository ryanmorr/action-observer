{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/action-observer.js"],"names":["f","exports","module","define","amd","window","global","self","this","ao","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","key","callback","listeners","triggered","docElement","removeEventListener","onEvent","document","documentElement","Object","create","evt","el","target","closest","nodeName","toLowerCase","type","getAttribute","addEventListener"],"mappings":";CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,GAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,IAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAf,EAAAD,2ECwCO,SAAiByB,EAAKC,GACzBC,EAAUF,GAAO,CAACG,WAAW,EAAOF,SAAAA,gBAUjC,SAAmBD,GAClBA,KAAOE,UACAA,EAAUF,mBAYlB,SAAsBA,GACzB,OAAOA,KAAOE,GAAaA,EAAUF,GAAKG,qBAUvC,WACHC,EAAWC,oBAAoB,QAASC,GAAS,GACjDF,EAAWC,oBAAoB,SAAUC,GAAS,IA3EtD,IAAMF,EAAazB,OAAO4B,SAASC,gBAC7BN,EAAYO,OAAOC,OAAO,MAShC,SAASJ,EAAQK,GACb,IAAMC,EAAKD,EAAIE,OAAOC,QAAQ,oBAC9B,GAAIF,EAAI,CACJ,GAAkC,SAA9BA,EAAGG,SAASC,eAAyC,WAAbL,EAAIM,KAC5C,OAEJ,IAAMjB,EAAMY,EAAGM,aAAa,kBACtBlB,KAAOE,IACTA,EAAUF,GAAO,IAErBE,EAAUF,GAAKG,WAAY,EAC3B,IAAMF,EAAWC,EAAUF,GAAKC,SAC5BA,GACAA,EAASJ,KAAKe,EAAID,EAAKC,IA2DnCR,EAAWe,iBAAiB,QAASb,GAAS,GAC9CF,EAAWe,iBAAiB,SAAUb,GAAS,gBDtF/C","file":"action-observer.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Common variables\r\n */\r\nconst docElement = window.document.documentElement;\r\nconst listeners = Object.create(null);\r\n\r\n/**\r\n * Handle action events (click, submit) on\r\n * the document\r\n *\r\n * @param {Event} evt\r\n * @api private\r\n */\r\nfunction onEvent(evt) {\r\n    const el = evt.target.closest('[action-observe]');\r\n    if (el) {\r\n        if (el.nodeName.toLowerCase() === 'form' && evt.type !== 'submit') {\r\n            return;\r\n        }\r\n        const key = el.getAttribute('action-observe');\r\n        if (!(key in listeners)) {\r\n            listeners[key] = {};\r\n        }\r\n        listeners[key].triggered = true;\r\n        const callback = listeners[key].callback;\r\n        if (callback) {\r\n            callback.call(el, evt, el);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map a callback function to the element\r\n * in which you would like to observe action\r\n * events on\r\n *\r\n * @param {String} key\r\n * @param {Function} callback\r\n * @api public\r\n */\r\nexport function observe(key, callback) {\r\n    listeners[key] = {triggered: false, callback};\r\n}\r\n\r\n/**\r\n * Remove a callback function bound to an\r\n * element being observed\r\n *\r\n * @param {String} key\r\n * @api public\r\n */\r\nexport function unobserve(key) {\r\n    if (key in listeners) {\r\n        delete listeners[key];\r\n    }\r\n}\r\n\r\n/**\r\n * Was an action event triggered on the\r\n * element corresponding to the provided key\r\n *\r\n * @param {String} key\r\n * @return {Boolean}\r\n * @api public\r\n */\r\nexport function wasTriggered(key) {\r\n    return key in listeners && listeners[key].triggered;\r\n}\r\n\r\n/**\r\n * Disable Action Observer functionality and\r\n * remove the event listeners from the\r\n * document element\r\n *\r\n * @api public\r\n */\r\nexport function disable() {\r\n    docElement.removeEventListener('click', onEvent, false);\r\n    docElement.removeEventListener('submit', onEvent, false);\r\n}\r\n\r\n/**\r\n * Listen for click and submit events on the\r\n * document when they bubble up\r\n */\r\ndocElement.addEventListener('click', onEvent, false);\r\ndocElement.addEventListener('submit', onEvent, false);\r\n"]}